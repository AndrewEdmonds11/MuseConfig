#!/bin/sh
#
# An example hook script to verify what is about to be committed.
# Called by "git commit" with no arguments.  The hook should
# exit with non-zero status after issuing an appropriate message if
# it wants to stop the commit.
#
# this script has a second mode which is called from CI.
# in this case it has an argument:
#  $1  the branch to checked against, like mu2e/main
# and the checks will be run comparing the checked out branch
# this mode assumes the default directory is Offline

if [ $# -eq 1 ]; then
    cimode=true
    against="$1"
else
    cimode=""
fi

if [ $cimode ]; then

    git config --local core.whitespace  trailing-space,tab-in-indent
    names=$( git diff --name-only $against )

else
    if git rev-parse --verify HEAD >/dev/null 2>&1
    then
        against=HEAD
    else
        # Initial commit: diff against an empty tree object
        against=$(git hash-object -t tree /dev/null)
    fi

    # Redirect output to stderr.
    exec 1>&2

    # Cross platform projects tend to avoid non-ASCII filenames; prevent
    # them from being added to the repository. We exploit the fact that the
    # printable range starts at the space character and ends with tilde.
    badchar=$(git diff --cached --name-only --diff-filter=A  $against | \
        LC_ALL=C tr -d 'A-Za-z0-9/\n_.-' | wc -c)
    if [ $badchar != 0 ]
    then
        echo "Check failed: cannot add a file name with non-ASCII or blank char."
        exit 1
    fi

    names=$( git diff --cached --name-only --diff-filter=AM  $against )

fi

rc=0
geomReg1=".*/geom[^/]*\.txt$"
geomReg2="Mu2eG4/geom/.*\.txt$"
for name in $names
do
  bname=$( basename $name )
  ext=$(echo $bname | awk -F. '{if(NF==1) print ""; else print $NF};' )
  if [[ "$ext" == "hh" || "$ext" == "cc" || "$ext" == "fcl" \
      || "$ext" == "C" ||  "$ext" == "h" || "$ext" == "icc" \
      || "$ext" == "mac" || "$ext" == "sh" || "$ext" == "py" || "$ext" == "pl" \
      || "$bname" == "SConscript" \
      || "$name" =~ $geomReg1 || "$name" =~ $geomReg2 ]]; then

      # check whitespace and return non-zero if not allowed
      if [ $cimode ]; then
          git diff --check $against $name
      else
          git diff-index --check --cached $against $name
      fi
      [ $? -ne 0 ] && rc=1

      if [[ $(tail -c1 "$name" | wc -l) -eq 0 ]]; then
          echo "Commit check failed: $name does not have a terminal newline"
          rc=1
      fi

  fi
done

if [ $rc -ne 0 ] ; then
    if [ $cimode ]; then
        echo "Whitespace check detected format errors"
    else
        echo "Pre-commit check detected format errors, please fix and try to commit again"
    fi
fi

exit $rc
